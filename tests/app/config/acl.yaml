# key: ~all - Разрешено всем
# key: ~user - Разрешено только авторизованным пользователям
# key: -role<Name> - Разрешено только роли, или роляи
# key: ~nobody - Запрещено всем, Никому не разрешено
# key: ~owner - Вызывает метод __is_owner__ апи для проверки прав, пользователь должен быть активным и авторизованным
# key: ~me - Заносит в свойство __me__ класса апи информацию об авторизованном пользователе,
#             пользователь должен быть активным и авторизованным
# key: ~access - Вызывает метод __is_access__ апи для проверки прав
# ~permission: rule - Значение будет использовано для всех не назначенных методов
#
#
# Структура:
# api - базовый компонент для распределенпия прав для апи
# api.~default - ~default - Значение будет использовано для всех не назначенных методов
# api.<базовый url> - базовый url - базовый урл для точки апи из наименования api.namespace("user")
# api.<базовый url>.<http метод> - http метод - HTTP метод, он же метод в классе
# api.<базовый url>.<int:id>.<http метод> - int:id - модификатор урла из @blueprint.route("/<int:id>")
# api.<базовый url>.<именованный метод> - именованный метод - имя точки из @blueprint.with_access(name="drop")
#
# Включения аклов к методу апи добавляет так же возможность вызова self.abort(403, description="Access denied")

# ~permission - блок правил доступа. Значение может быть списком, строкой или объектом
# ~permission: ~all - Разрешено всем
# ~permission: ~user - Разрешено только авторизованным пользователям
# ~permission: -role<Name> - Разрешено только роли, или роляи
# ~permission: ~nobody - Запрещено всем, Никому не разрешено
# ~permission: ~owner - Вызывает метод __is_owner__ апи для проверки прав, пользователь должен быть активным и авторизованным
# ~permission: ~me - Заносит в свойство __me__ класса апи информацию об авторизованном пользователе,
#             пользователь должен быть активным и авторизованным
# ~permission: ~access - Вызывает метод __is_access__ апи для проверки прав
#
# список правил
# ~permission:
#   - role1
#   - role2
#
# список правил
# ~permission:
#   roles:
#     - role1
#     - role2
#
# список правил для пространств
# ~permission:
#   reference:
#     space:
#       - role1
#       - role2
#
#
#

api:
  permission: nobody
